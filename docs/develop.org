#+STARTUP: overview
#+OPTIONS: ^:nil
#+OPTIONS: p:t

** Tasks
*** Manuscript 
**** Post-paper iterations
***** Iteration 2 (consistency and formatting)
****** Final steps
******* update everything from Miku's comments
******** update objective to be clear -> improve sentence structure 
******** update background concepts to mention localized and indirect
******** need to update methodologies as well with motivation
******** add objective to conclusion as well
******* perform spell-check of all text -> reformat spell-corrections if need be
******** check that all quotes have page/section attribution
******** check that all borrowed figures have "taken from"
******** ensure all text is padded
******* re-read paper for flow and sensibility 
******** check all figure and table captions -> remove visualization as well since it is redundant
******** look out for possible abbreviation errors

****** Formalities
******* write abstract and mention results and TauSTE with new purpose -> add it into the TOC as well
******* add student registration details and latest date on bottom
******* take note of all other submission criteria such as statement of originality, German abstract, digital copy and others, see: https://www.uni-potsdam.de/en/studium/studying/organizing-your-exams/final-thesis
******** 20-90 pages thesis length
******** add these after TOC and list them into TOC
******** add remaining features by referring back to master template
        
*** Programming
**** Clean-code and documentation
***** Source-code
****** rename RegexSoftPatternClassifier class to RegexProxy if possible without breakages
****** change light, medium and heavy to small, medium and large in all scripts, filenames and log variables consistently
****** add a comment above each code chunk which explains inner mechanisms better
***** Readme
****** update readme and usages with finalized antecedent and proxy terminologies 
****** upadte readme and usages with finalized STE/output neurons terminologies
****** rename all mentions of regex to RE in readme other than usage
****** add information on best model downloads and preparation -> add these to Google Drive later on
****** update metadata eg. with comprehensive python/shell help scripts, comments describing functionality and readme descriptions for git hooks
****** test out all shell-scripts and python code to make sure everything works the same after major renamings
****** test download and all other scripts to ensure they work
****** perform spell-check on readme 

** Notes
*** Admin
**** Timeline
***** +Initial thesis document: *15.09.2020*+
***** +Topic proposal draft: *06.11.2020*+
***** +Topic proposal final: *15.11.2020*+
***** +Topic registration: *01.02.2021*+
***** Offical manuscript submission: *12.04.2021*

** Legacy
*** Interpretable RNN architectures
**** State-regularized-RNNs (SR-RNNs)
***** good: very powerful and easily interpretable architecture with extensions to NLP and CV
***** good: simple code which can probably be ported to PyTorch relatively quickly
***** good: contact made with author and could get advice for possible extensions
***** problematic: code is outdated and written in Theano, TensorFlow version likely to be out by end of year
***** problematic: DFA extraction from SR-RNNs is clear, but DPDA extraction/visualization from SR-LSTMs is not clear probably because of no analog for discrete stack symbols from continuous cell (memory) states
***** possible extensions: port state-regularized RNNs to PyTorch (might be simple since code-base is generally simple), final conversion to REs for interpretability, global explainability for natural language, adding different loss to ensure words cluster to same centroid as much as possible -> or construct large automata, perhaps pursue sentiment analysis from SR-RNNs perspective instead and derive DFAs to model these
**** Rational recurences (RRNNs)
***** good: code quality in PyTorch, succinct and short
***** good: heavy mathematical background which could lend to more interesting mathematical analyses
***** problematic: seemingly missing interpretability section in paper -> theoretical and mathematical, which is good for understanding
***** problematic: hard to draw exact connection to interpretability, might take too long to understand everything
**** Finite-automation-RNNs (FA-RNNs)
***** source code likely released by November, but still requires initial REs which may not be present -> might not be the best fit
***** FA-RNNs involving REs and substitutions could be useful extensions as finite state transducers for interpretable neural machine translation

*** Interpretable surrogate extraction
***** overall more costly and less chance of high performance       
***** FA/WFA extraction
****** spectral learning, clustering
****** less direct interpretability
****** more proof of performance needed -> need to show it is better than simple data learning

*** Neuro-symbolic paradigms
***** research questions
****** can we train use a neuro-symbolic paradigm to attain high performance (similar to NNs) for NLP task(s)?
****** if so, can this paradigm provide us with greater explainability about the inner workings of the model?

*** Neural decision trees
***** decision trees are the same as logic programs -> the objective should be to learn logic programs
***** hierarchies are constructed in weight-space which lends itself to non-sequential models very well -> but problematic for token-level hierarchies
***** research questions
****** can we achieve similar high performance using decision tree distillation techniques (by imitating NNs)?
****** can this decision tree improve interpretability/explainability?
****** can this decision tree distillation technique outperform simple decision tree learning from training data?

*** Inductive logic on NLP search spaces
***** can potentially use existing IM models such as paraphrase detector for introspection purposes in thesis
***** n-gram power sets to explore for statistical artefacts -> ANNs can only access the search space of N-gram power sets -> solution to NLP tasks must be a statistical solution within the power sets which links back to symbolism
***** eg. differentiable ILP from DeepMind
***** propositional logic only contains atoms while predicate/first-order logic contain variables      
